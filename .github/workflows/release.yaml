name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - '*'
 
jobs:
  tool:
    name: Create Tool
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.1
        with:
          useConfigFile: true
      - name: Restore
        run: dotnet restore --verbosity Quiet
      - name: Pack
        run: |
          dotnet pack -c release --no-restore -p:PackageID=cuidgen.tool \
            -p:PublishSingleFile=false \
            -p:PublishTrimmed=false \
            -p:IncludeNativeLibrariesForSelfExtraction=false \
            -p:PackageVersion=${{ steps.gitversion.outputs.fullSemVer }} \
            -p:PackageOutputPath=${{ runner.temp }}/packages
      - name: Push
        run: dotnet nuget push *.nupkg -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json --skip-duplicate
        working-directory: ${{ runner.temp }}/packages
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: tool
    permissions: write-all
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: ncipollo/release-action@v1
        with:
          name: ${{ github.ref_name }}
          tag: ${{ github.ref }}        
  artifacts:
    name: Publish
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        rid: [linux-arm64, linux-musl-arm64, linux-musl-x64, linux-x64, osx-arm64, osx-x64, win-arm64, win-x64]
        include:
          - rid: linux-arm64
          - rid: linux-musl-arm64
          - rid: linux-musl-x64
          - rid: linux-x64
          - rid: osx-arm64
          - rid: osx-x64
          - rid: win-arm64
          - rid: win-x64
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.1
        with:
          useConfigFile: true
      - run: |
          dotnet publish -c release --self-contained -r ${{ matrix.rid }} \
            -p:Version=${{ steps.gitversion.outputs.assemblySemVer }} \
            -p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} \
            -p:InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }} \
            -p:PublishDir=${{ runner.temp }}/artifacts/${{ matrix.rid }}
          7z a cuidgen-${{ steps.gitversion.outputs.semVer}}-${{ matrix.rid }}.7z ${{ runner.temp }}/artifacts/${{ matrix.rid }}/*
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: cuidgen-${{ steps.gitversion.outputs.semVer}}-${{ matrix.rid }}.7z
            